"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/quill-image-uploader";
exports.ids = ["vendor-chunks/quill-image-uploader"];
exports.modules = {

/***/ "(ssr)/./node_modules/quill-image-uploader/src/blots/image.js":
/*!**************************************************************!*\
  !*** ./node_modules/quill-image-uploader/src/blots/image.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var quill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! quill */ \"(ssr)/./node_modules/quill/dist/quill.js\");\n/* harmony import */ var quill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(quill__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nconst InlineBlot = quill__WEBPACK_IMPORTED_MODULE_0___default()[\"import\"](\"blots/block\");\r\n\r\nclass LoadingImage extends InlineBlot {\r\n    static create(src) {\r\n        const node = super.create(src);\r\n        if (src === true) return node;\r\n\r\n        const image = document.createElement(\"img\");\r\n        image.setAttribute(\"src\", src);\r\n        node.appendChild(image);\r\n        return node;\r\n    }\r\n    deleteAt(index, length) {\r\n        super.deleteAt(index, length);\r\n        this.cache = {};\r\n    }\r\n    static value(domNode) {\r\n        const { src, custom } = domNode.dataset;\r\n        return { src, custom };\r\n    }\r\n}\r\n\r\nLoadingImage.blotName = \"imageBlot\";\r\nLoadingImage.className = \"image-uploading\";\r\nLoadingImage.tagName = \"span\";\r\nquill__WEBPACK_IMPORTED_MODULE_0___default().register({ \"formats/imageBlot\": LoadingImage });\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoadingImage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXVpbGwtaW1hZ2UtdXBsb2FkZXIvc3JjL2Jsb3RzL2ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQjtBQUMxQjtBQUNBLG1CQUFtQixzREFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixjQUFjO0FBQzlCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBYyxHQUFHLG1DQUFtQztBQUNwRDtBQUNBLGlFQUFlLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lc2dyb2FkbWFwLWFkbWluLy4vbm9kZV9tb2R1bGVzL3F1aWxsLWltYWdlLXVwbG9hZGVyL3NyYy9ibG90cy9pbWFnZS5qcz83MmYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBRdWlsbCBmcm9tIFwicXVpbGxcIjtcclxuXHJcbmNvbnN0IElubGluZUJsb3QgPSBRdWlsbC5pbXBvcnQoXCJibG90cy9ibG9ja1wiKTtcclxuXHJcbmNsYXNzIExvYWRpbmdJbWFnZSBleHRlbmRzIElubGluZUJsb3Qge1xyXG4gICAgc3RhdGljIGNyZWF0ZShzcmMpIHtcclxuICAgICAgICBjb25zdCBub2RlID0gc3VwZXIuY3JlYXRlKHNyYyk7XHJcbiAgICAgICAgaWYgKHNyYyA9PT0gdHJ1ZSkgcmV0dXJuIG5vZGU7XHJcblxyXG4gICAgICAgIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgICAgICBpbWFnZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgc3JjKTtcclxuICAgICAgICBub2RlLmFwcGVuZENoaWxkKGltYWdlKTtcclxuICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgIH1cclxuICAgIGRlbGV0ZUF0KGluZGV4LCBsZW5ndGgpIHtcclxuICAgICAgICBzdXBlci5kZWxldGVBdChpbmRleCwgbGVuZ3RoKTtcclxuICAgICAgICB0aGlzLmNhY2hlID0ge307XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdmFsdWUoZG9tTm9kZSkge1xyXG4gICAgICAgIGNvbnN0IHsgc3JjLCBjdXN0b20gfSA9IGRvbU5vZGUuZGF0YXNldDtcclxuICAgICAgICByZXR1cm4geyBzcmMsIGN1c3RvbSB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5Mb2FkaW5nSW1hZ2UuYmxvdE5hbWUgPSBcImltYWdlQmxvdFwiO1xyXG5Mb2FkaW5nSW1hZ2UuY2xhc3NOYW1lID0gXCJpbWFnZS11cGxvYWRpbmdcIjtcclxuTG9hZGluZ0ltYWdlLnRhZ05hbWUgPSBcInNwYW5cIjtcclxuUXVpbGwucmVnaXN0ZXIoeyBcImZvcm1hdHMvaW1hZ2VCbG90XCI6IExvYWRpbmdJbWFnZSB9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExvYWRpbmdJbWFnZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/quill-image-uploader/src/blots/image.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/quill-image-uploader/src/quill.imageUploader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/quill-image-uploader/src/quill.imageUploader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _blots_image_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blots/image.js */ \"(ssr)/./node_modules/quill-image-uploader/src/blots/image.js\");\n\r\n\r\nclass ImageUploader {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.range = null;             \r\n        this.placeholderDelta = null; \r\n\r\n        if (typeof this.options.upload !== \"function\")\r\n            console.warn(\r\n                \"[Missing config] upload function that returns a promise is required\"\r\n            );\r\n\r\n        var toolbar = this.quill.getModule(\"toolbar\");\r\n        if (toolbar) {\r\n            toolbar.addHandler(\"image\", this.selectLocalImage.bind(this));\r\n        }\r\n\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.handlePaste = this.handlePaste.bind(this);\r\n\r\n        this.quill.root.addEventListener(\"drop\", this.handleDrop, false);\r\n        this.quill.root.addEventListener(\"paste\", this.handlePaste, false);\r\n    }\r\n\r\n    selectLocalImage() {\r\n        this.quill.focus();\r\n        this.range = this.quill.getSelection();\r\n        this.fileHolder = document.createElement(\"input\");\r\n        this.fileHolder.setAttribute(\"type\", \"file\");\r\n        this.fileHolder.setAttribute(\"accept\", \"image/*\");\r\n        this.fileHolder.setAttribute(\"style\", \"visibility:hidden\");\r\n\r\n        this.fileHolder.onchange = this.fileChanged.bind(this);\r\n\r\n        document.body.appendChild(this.fileHolder);\r\n\r\n        this.fileHolder.click();\r\n\r\n        window.requestAnimationFrame(() => {\r\n            document.body.removeChild(this.fileHolder);\r\n        });\r\n    }\r\n\r\n    handleDrop(evt) {\r\n        if (\r\n            evt.dataTransfer &&\r\n            evt.dataTransfer.files &&\r\n            evt.dataTransfer.files.length\r\n        ) {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            if (document.caretRangeFromPoint) {\r\n                const selection = document.getSelection();\r\n                const range = document.caretRangeFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.startContainer,\r\n                        range.startOffset,\r\n                        range.startContainer,\r\n                        range.startOffset\r\n                    );\r\n                }\r\n            } else {\r\n                const selection = document.getSelection();\r\n                const range = document.caretPositionFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.offsetNode,\r\n                        range.offset,\r\n                        range.offsetNode,\r\n                        range.offset\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.quill.focus();\r\n            this.range = this.quill.getSelection();\r\n            let file = evt.dataTransfer.files[0];\r\n\r\n            setTimeout(() => {\r\n                this.quill.focus();\r\n                this.range = this.quill.getSelection();\r\n                this.readAndUploadFile(file);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handlePaste(evt) {\r\n        let clipboard = evt.clipboardData || window.clipboardData;\r\n\r\n        // IE 11 is .files other browsers are .items\r\n        if (clipboard && (clipboard.items || clipboard.files)) {\r\n            let items = clipboard.items || clipboard.files;\r\n            const IMAGE_MIME_REGEX = /^image\\/(jpe?g|gif|png|svg|webp)$/i;\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (IMAGE_MIME_REGEX.test(items[i].type)) {\r\n                    let file = items[i].getAsFile ? items[i].getAsFile() : items[i];\r\n\r\n                    if (file) {\r\n                        this.quill.focus();\r\n                        this.range = this.quill.getSelection();\r\n                        evt.preventDefault();\r\n                        setTimeout(() => {\r\n                            this.quill.focus();\r\n                            this.range = this.quill.getSelection();\r\n                            this.readAndUploadFile(file);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readAndUploadFile(file) {\r\n        let isUploadReject = false;\r\n\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.addEventListener(\r\n            \"load\",\r\n            () => {\r\n                if (!isUploadReject) {\r\n                    let base64ImageSrc = fileReader.result;\r\n                    this.insertBase64Image(base64ImageSrc);\r\n                }\r\n            },\r\n            false\r\n        );\r\n\r\n        if (file) {\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n\r\n        this.options.upload(file).then(\r\n            (imageUrl) => {\r\n                this.insertToEditor(imageUrl);\r\n            },\r\n            (error) => {\r\n                isUploadReject = true;\r\n                this.removeBase64Image();\r\n                console.warn(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    fileChanged() {\r\n        const file = this.fileHolder.files[0];\r\n        this.readAndUploadFile(file);\r\n    }\r\n\r\n    insertBase64Image(url) {\r\n        const range = this.range;\r\n                \r\n        this.placeholderDelta = this.quill.insertEmbed(\r\n            range.index,\r\n            _blots_image_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blotName,\r\n            `${url}`,\r\n            \"user\"\r\n        );\r\n    }\r\n\r\n    insertToEditor(url) {\r\n        const range = this.range;        \r\n\r\n        const lengthToDelete = this.calculatePlaceholderInsertLength();        \r\n        \r\n        // Delete the placeholder image\r\n        this.quill.deleteText(range.index, lengthToDelete, \"user\");\r\n        // Insert the server saved image\r\n        this.quill.insertEmbed(range.index, \"image\", `${url}`, \"user\");\r\n\r\n        range.index++;\r\n        this.quill.setSelection(range, \"user\");\r\n    }\r\n\r\n    // The length of the insert delta from insertBase64Image can vary depending on what part of the line the insert occurs\r\n    calculatePlaceholderInsertLength() {\r\n        return this.placeholderDelta.ops.reduce((accumulator, deltaOperation) => {            \r\n            if (deltaOperation.hasOwnProperty('insert'))\r\n                accumulator++;\r\n\r\n            return accumulator;\r\n        }, 0);\r\n    }\r\n\r\n    removeBase64Image() {        \r\n        const range = this.range;\r\n        const lengthToDelete = this.calculatePlaceholderInsertLength();\r\n\r\n        this.quill.deleteText(range.index, lengthToDelete, \"user\");\r\n    }\r\n}\r\n\r\nwindow.ImageUploader = ImageUploader;\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageUploader);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXVpbGwtaW1hZ2UtdXBsb2FkZXIvc3JjL3F1aWxsLmltYWdlVXBsb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVEQUFZO0FBQ3hCLGVBQWUsSUFBSTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsSUFBSTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lc2dyb2FkbWFwLWFkbWluLy4vbm9kZV9tb2R1bGVzL3F1aWxsLWltYWdlLXVwbG9hZGVyL3NyYy9xdWlsbC5pbWFnZVVwbG9hZGVyLmpzP2JkYzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvYWRpbmdJbWFnZSBmcm9tIFwiLi9ibG90cy9pbWFnZS5qc1wiO1xyXG5cclxuY2xhc3MgSW1hZ2VVcGxvYWRlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihxdWlsbCwgb3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMucXVpbGwgPSBxdWlsbDtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xyXG4gICAgICAgIHRoaXMucmFuZ2UgPSBudWxsOyAgICAgICAgICAgICBcclxuICAgICAgICB0aGlzLnBsYWNlaG9sZGVyRGVsdGEgPSBudWxsOyBcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMudXBsb2FkICE9PSBcImZ1bmN0aW9uXCIpXHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcclxuICAgICAgICAgICAgICAgIFwiW01pc3NpbmcgY29uZmlnXSB1cGxvYWQgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgcHJvbWlzZSBpcyByZXF1aXJlZFwiXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgIHZhciB0b29sYmFyID0gdGhpcy5xdWlsbC5nZXRNb2R1bGUoXCJ0b29sYmFyXCIpO1xyXG4gICAgICAgIGlmICh0b29sYmFyKSB7XHJcbiAgICAgICAgICAgIHRvb2xiYXIuYWRkSGFuZGxlcihcImltYWdlXCIsIHRoaXMuc2VsZWN0TG9jYWxJbWFnZS5iaW5kKHRoaXMpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuaGFuZGxlRHJvcCA9IHRoaXMuaGFuZGxlRHJvcC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlUGFzdGUgPSB0aGlzLmhhbmRsZVBhc3RlLmJpbmQodGhpcyk7XHJcblxyXG4gICAgICAgIHRoaXMucXVpbGwucm9vdC5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCB0aGlzLmhhbmRsZURyb3AsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLnF1aWxsLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcihcInBhc3RlXCIsIHRoaXMuaGFuZGxlUGFzdGUsIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxlY3RMb2NhbEltYWdlKCkge1xyXG4gICAgICAgIHRoaXMucXVpbGwuZm9jdXMoKTtcclxuICAgICAgICB0aGlzLnJhbmdlID0gdGhpcy5xdWlsbC5nZXRTZWxlY3Rpb24oKTtcclxuICAgICAgICB0aGlzLmZpbGVIb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICAgICAgdGhpcy5maWxlSG9sZGVyLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJmaWxlXCIpO1xyXG4gICAgICAgIHRoaXMuZmlsZUhvbGRlci5zZXRBdHRyaWJ1dGUoXCJhY2NlcHRcIiwgXCJpbWFnZS8qXCIpO1xyXG4gICAgICAgIHRoaXMuZmlsZUhvbGRlci5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcInZpc2liaWxpdHk6aGlkZGVuXCIpO1xyXG5cclxuICAgICAgICB0aGlzLmZpbGVIb2xkZXIub25jaGFuZ2UgPSB0aGlzLmZpbGVDaGFuZ2VkLmJpbmQodGhpcyk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5maWxlSG9sZGVyKTtcclxuXHJcbiAgICAgICAgdGhpcy5maWxlSG9sZGVyLmNsaWNrKCk7XHJcblxyXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuZmlsZUhvbGRlcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlRHJvcChldnQpIHtcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIGV2dC5kYXRhVHJhbnNmZXIgJiZcclxuICAgICAgICAgICAgZXZ0LmRhdGFUcmFuc2Zlci5maWxlcyAmJlxyXG4gICAgICAgICAgICBldnQuZGF0YVRyYW5zZmVyLmZpbGVzLmxlbmd0aFxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQuY2FyZXRSYW5nZUZyb21Qb2ludCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5nZSA9IGRvY3VtZW50LmNhcmV0UmFuZ2VGcm9tUG9pbnQoZXZ0LmNsaWVudFgsIGV2dC5jbGllbnRZKTtcclxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb24gJiYgcmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uc2V0QmFzZUFuZEV4dGVudChcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnRDb250YWluZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0T2Zmc2V0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zdGFydENvbnRhaW5lcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnRPZmZzZXRcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5nZSA9IGRvY3VtZW50LmNhcmV0UG9zaXRpb25Gcm9tUG9pbnQoZXZ0LmNsaWVudFgsIGV2dC5jbGllbnRZKTtcclxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb24gJiYgcmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uc2V0QmFzZUFuZEV4dGVudChcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uub2Zmc2V0Tm9kZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uub2Zmc2V0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5vZmZzZXROb2RlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5vZmZzZXRcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnF1aWxsLmZvY3VzKCk7XHJcbiAgICAgICAgICAgIHRoaXMucmFuZ2UgPSB0aGlzLnF1aWxsLmdldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICBsZXQgZmlsZSA9IGV2dC5kYXRhVHJhbnNmZXIuZmlsZXNbMF07XHJcblxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMucXVpbGwuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmFuZ2UgPSB0aGlzLnF1aWxsLmdldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWFkQW5kVXBsb2FkRmlsZShmaWxlKTtcclxuICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZVBhc3RlKGV2dCkge1xyXG4gICAgICAgIGxldCBjbGlwYm9hcmQgPSBldnQuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YTtcclxuXHJcbiAgICAgICAgLy8gSUUgMTEgaXMgLmZpbGVzIG90aGVyIGJyb3dzZXJzIGFyZSAuaXRlbXNcclxuICAgICAgICBpZiAoY2xpcGJvYXJkICYmIChjbGlwYm9hcmQuaXRlbXMgfHwgY2xpcGJvYXJkLmZpbGVzKSkge1xyXG4gICAgICAgICAgICBsZXQgaXRlbXMgPSBjbGlwYm9hcmQuaXRlbXMgfHwgY2xpcGJvYXJkLmZpbGVzO1xyXG4gICAgICAgICAgICBjb25zdCBJTUFHRV9NSU1FX1JFR0VYID0gL15pbWFnZVxcLyhqcGU/Z3xnaWZ8cG5nfHN2Z3x3ZWJwKSQvaTtcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChJTUFHRV9NSU1FX1JFR0VYLnRlc3QoaXRlbXNbaV0udHlwZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IGl0ZW1zW2ldLmdldEFzRmlsZSA/IGl0ZW1zW2ldLmdldEFzRmlsZSgpIDogaXRlbXNbaV07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVpbGwuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yYW5nZSA9IHRoaXMucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVpbGwuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmFuZ2UgPSB0aGlzLnF1aWxsLmdldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWFkQW5kVXBsb2FkRmlsZShmaWxlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlYWRBbmRVcGxvYWRGaWxlKGZpbGUpIHtcclxuICAgICAgICBsZXQgaXNVcGxvYWRSZWplY3QgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgY29uc3QgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcblxyXG4gICAgICAgIGZpbGVSZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICAgICAgXCJsb2FkXCIsXHJcbiAgICAgICAgICAgICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghaXNVcGxvYWRSZWplY3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYmFzZTY0SW1hZ2VTcmMgPSBmaWxlUmVhZGVyLnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmluc2VydEJhc2U2NEltYWdlKGJhc2U2NEltYWdlU3JjKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZmFsc2VcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBpZiAoZmlsZSkge1xyXG4gICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm9wdGlvbnMudXBsb2FkKGZpbGUpLnRoZW4oXHJcbiAgICAgICAgICAgIChpbWFnZVVybCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnNlcnRUb0VkaXRvcihpbWFnZVVybCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgaXNVcGxvYWRSZWplY3QgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVCYXNlNjRJbWFnZSgpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGVycm9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgZmlsZUNoYW5nZWQoKSB7XHJcbiAgICAgICAgY29uc3QgZmlsZSA9IHRoaXMuZmlsZUhvbGRlci5maWxlc1swXTtcclxuICAgICAgICB0aGlzLnJlYWRBbmRVcGxvYWRGaWxlKGZpbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGluc2VydEJhc2U2NEltYWdlKHVybCkge1xyXG4gICAgICAgIGNvbnN0IHJhbmdlID0gdGhpcy5yYW5nZTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIHRoaXMucGxhY2Vob2xkZXJEZWx0YSA9IHRoaXMucXVpbGwuaW5zZXJ0RW1iZWQoXHJcbiAgICAgICAgICAgIHJhbmdlLmluZGV4LFxyXG4gICAgICAgICAgICBMb2FkaW5nSW1hZ2UuYmxvdE5hbWUsXHJcbiAgICAgICAgICAgIGAke3VybH1gLFxyXG4gICAgICAgICAgICBcInVzZXJcIlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5zZXJ0VG9FZGl0b3IodXJsKSB7XHJcbiAgICAgICAgY29uc3QgcmFuZ2UgPSB0aGlzLnJhbmdlOyAgICAgICAgXHJcblxyXG4gICAgICAgIGNvbnN0IGxlbmd0aFRvRGVsZXRlID0gdGhpcy5jYWxjdWxhdGVQbGFjZWhvbGRlckluc2VydExlbmd0aCgpOyAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gRGVsZXRlIHRoZSBwbGFjZWhvbGRlciBpbWFnZVxyXG4gICAgICAgIHRoaXMucXVpbGwuZGVsZXRlVGV4dChyYW5nZS5pbmRleCwgbGVuZ3RoVG9EZWxldGUsIFwidXNlclwiKTtcclxuICAgICAgICAvLyBJbnNlcnQgdGhlIHNlcnZlciBzYXZlZCBpbWFnZVxyXG4gICAgICAgIHRoaXMucXVpbGwuaW5zZXJ0RW1iZWQocmFuZ2UuaW5kZXgsIFwiaW1hZ2VcIiwgYCR7dXJsfWAsIFwidXNlclwiKTtcclxuXHJcbiAgICAgICAgcmFuZ2UuaW5kZXgrKztcclxuICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihyYW5nZSwgXCJ1c2VyXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFRoZSBsZW5ndGggb2YgdGhlIGluc2VydCBkZWx0YSBmcm9tIGluc2VydEJhc2U2NEltYWdlIGNhbiB2YXJ5IGRlcGVuZGluZyBvbiB3aGF0IHBhcnQgb2YgdGhlIGxpbmUgdGhlIGluc2VydCBvY2N1cnNcclxuICAgIGNhbGN1bGF0ZVBsYWNlaG9sZGVySW5zZXJ0TGVuZ3RoKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBsYWNlaG9sZGVyRGVsdGEub3BzLnJlZHVjZSgoYWNjdW11bGF0b3IsIGRlbHRhT3BlcmF0aW9uKSA9PiB7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChkZWx0YU9wZXJhdGlvbi5oYXNPd25Qcm9wZXJ0eSgnaW5zZXJ0JykpXHJcbiAgICAgICAgICAgICAgICBhY2N1bXVsYXRvcisrO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUJhc2U2NEltYWdlKCkgeyAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcmFuZ2UgPSB0aGlzLnJhbmdlO1xyXG4gICAgICAgIGNvbnN0IGxlbmd0aFRvRGVsZXRlID0gdGhpcy5jYWxjdWxhdGVQbGFjZWhvbGRlckluc2VydExlbmd0aCgpO1xyXG5cclxuICAgICAgICB0aGlzLnF1aWxsLmRlbGV0ZVRleHQocmFuZ2UuaW5kZXgsIGxlbmd0aFRvRGVsZXRlLCBcInVzZXJcIik7XHJcbiAgICB9XHJcbn1cclxuXHJcbndpbmRvdy5JbWFnZVVwbG9hZGVyID0gSW1hZ2VVcGxvYWRlcjtcclxuZXhwb3J0IGRlZmF1bHQgSW1hZ2VVcGxvYWRlcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/quill-image-uploader/src/quill.imageUploader.js\n");

/***/ })

};
;